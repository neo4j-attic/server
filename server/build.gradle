configurations {
    compileJs
}

dependencies {

    compileJs "com.yahoo.platform.yui:yuicompressor:2.4.2"

    compile project(":neo4j-server-api"),
            "$group:neo4j:$version",
            "log4j:log4j:$log4jVersion",
            "commons-configuration:commons-configuration:$commonsConfigurationVersion",
            "org.mortbay.jetty:jetty:$jettyVersion",
            "com.sun.jersey:jersey-server:$jerseyVersion",
            "de.huxhorn.lilith:de.huxhorn.lilith.3rdparty.rrd4j:$rrdVersion",
            "org.codehaus.jackson:jackson-jaxrs:$jacksonVersion",
            "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion",
            "org.neo4j:neo4j-shell:$version"

    compile("com.tinkerpop:gremlin:$gremlinVersion") {
        exclude module: "sesame-sail-api"
        exclude module: "gmaven-plugin"
        exclude module: "common"
        exclude module: "aduna-commons-iteration"
        exclude module: "jung-api"
    }

    //TODO remove this when  org.neo4j:neo4j is fixed
    compile("$group:neo4j-kernel:$version") {
        artifact {
            name = 'neo4j-kernel'
            type = 'jar'
            classifier = ''
        }
    }

    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion",
            "org.mockito:mockito-all:$mockitoVersion",
            "com.sun.jersey:jersey-client:$jerseyVersion",
            "jline:jline:$jlineVersion",
            "commons-io:commons-io:$commonsIoVersion"


    testCompile("$group:neo4j-kernel:$version") {
        artifact {
            name = 'neo4j-kernel'
            type = 'jar'
            classifier = 'tests'
        }
        artifact {
            name = 'neo4j-kernel'
            type = 'jar'
            classifier = ''
        }
    }
    testCompile "org.seleniumhq.webdriver:webdriver-firefox:0.9.7376"
    testCompile "org.seleniumhq.webdriver:webdriver-htmlunit:0.9.7376"
    testCompile("$group:neo4j-ha:$version") {
        artifact {
            name = 'neo4j-ha'
            type = 'jar'
            classifier = 'tests'
        }
        artifact {
            name = 'neo4j-ha'
            type = 'jar'
            classifier = ''
        }
    }
//    test {
//        maxParallelForks = 4
//        forkEvery = 4
//    }
}

sourceSets {
    integrationTest {
//TODO rename webtest into integrationTest
        java {
            srcDir "src/webtest/java"
        }
    }
}


task doAggregateJs {

    files = ["lib/jquery.1.4.2.js", "lib/json2.js", "lib/jquery-jtemplates.js", "lib/jquery.bbq.js",
            "lib/jquery.flot.js", "lib/jquery.simplemodal.js",

            //       "lib/neo4js.js",

            "wa/__init__.js", "wa/escape.js", "wa/events.js", "wa/PropertyStorage.js", "wa/prop.js", "wa/Servers.js",
            "wa/FormValidator.js", "wa/connectionmonitor.js",

            "wa/ui/__init__.js", "wa/ui/Tooltip.js",
            "wa/ui/Dialog.js", "wa/ui/Loading.js", "wa/ui/Pages.js", "wa/ui/Helpers.js", "wa/ui/MainMenu.js",
            "wa/ui/ErrorBox.js",

            "wa/widgets/__init__.js", "wa/widgets/LifecycleWidget.js", "wa/components/__init__.js",

            "wa/components/dashboard/__init__.js", "wa/components/dashboard/Dashboard.js",
            "wa/components/dashboard/PrimitiveCountWidget.js", "wa/components/dashboard/JmxValueTracker.js",
            "wa/components/dashboard/DiskUsageWidget.js", "wa/components/dashboard/CacheWidget.js",
            "wa/components/dashboard/CacheWidget.js", "wa/components/dashboard/MonitorChart.js",

            "wa/components/jmx/__init__.js", "wa/components/jmx/Jmx.js",

            "wa/components/backup/__init__.js", "wa/components/backup/parseJobData.js",
            "wa/components/backup/Backup.js",

            "wa/components/console/__init__.js", "wa/components/console/Console.js",

            "wa/components/config/__init__.js", "wa/components/config/Config.js",

            "wa/components/io/__init__.js", "wa/components/io/GraphIO.js", "wa/components/io/ExportSupport.js",
            "wa/components/io/ImportSupport.js",

            "wa/components/data/__init__.js", "wa/components/data/PropertiesToListManager.js",
            "wa/components/data/DataBrowser.js", "wa/components/data/PropertyEditor.js",
            "wa/components/data/NodeManager.js", "wa/components/data/RelationshipManager.js",

            "boot.js"]

    outFile = new File(new File(project.buildDir, 'js'), "webadmin-nocomp.js")

    doLast {
        outFile.parentFile.mkdirs();
        outFile.text = "";

        files.each {
            outFile.append(new File(projectDir, "src/main/javascript/" + it).readBytes());
        }
    }


}

//TODO remove this
task doMinifyJs(dependsOn: "doAggregateJs", type: JavaExec) {
    classpath = configurations.compileJs
    main = "com.yahoo.platform.yui.compressor.YUICompressor"
    args '-o', "$project.buildDir/classes/main/webadmin-html/webadmin.js", doAggregateJs.outFile
}

jar.dependsOn += 'doMinifyJs'